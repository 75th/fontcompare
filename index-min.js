const font1="Rodenh Bold",font2="Rodenh Interpolated Bold";class FontCompare{constructor(t,e){this.font1=t,this.font2=e,this.backgroundColor="#fff",this.fillColor="#000",this.fontSize=500,this.workingCanvas=document.getElementById("canvas"),this.previewCanvas=document.querySelector("canvas.preview"),this.event=new Event("fontcompare"),this.canvasSize=2*this.fontSize;const i={alpha:!1,desynchronized:!0,willReadFrequently:!0};[this.workingCanvas,this.previewCanvas].forEach((t=>{t.width=this.canvasSize,t.height=this.canvasSize})),this.workingContext=this.workingCanvas.getContext("2d",i),this.previewContext=this.previewCanvas.getContext("2d",i),this.workingContext.textAlign="center",this.workingContext.textRendering="geometricPrecision",window.addEventListener("fontcompare",this.displayResults.bind(this)),document.querySelector(".results").addEventListener("click",this.resultsRowClick.bind(this)),this.init()}init(){this.rankDifferences("ABCDEFGHIJKLMNOPQRSTUVWXYZBabcdefghijklmnopqrstuvwxyz1234567890")}resetContext(t=this.workingContext){t.fillStyle=this.backgroundColor,t.fillRect(0,0,this.workingCanvas.width,this.workingCanvas.height),t.fillStyle=this.fillColor}renderString(t,e,i=this.workingContext,n=!0){const s=Math.floor(this.fontSize),r=Math.floor(1.5*this.fontSize);i.font=`${this.fontSize}px ${e}`,i.fillText(t,s,r);const o=createImageBitmap(this.workingCanvas);return n&&this.resetContext(),o}getDiff(t){this.workingContext.drawImage(t[0],0,0),this.workingContext.globalCompositeOperation="difference",this.workingContext.drawImage(t[1],0,0),this.workingContext.globalCompositeOperation="source-over";const e=this.workingContext.getImageData(0,0,this.workingCanvas.width,this.workingCanvas.height);return new Uint8ClampedArray(e.data)}calculateDifference(t){return this.resetContext(),Promise.all([this.renderString(t,this.font1),this.renderString(t,this.font2)]).then((e=>{const i=this.getDiff(e),n=i.length;let s=0;for(let t=0;t<n;t+=4)s+=i[t]/255*(i[t+3]/255);return{char:t,diffImage:i,difference:s,images:e}}))}rankDifferences(t){return Promise.all(t.split("").map((t=>this.calculateDifference(t)))).then((t=>{this.results=t.sort(((t,e)=>e.difference-t.difference)),window.dispatchEvent(this.event)}))}displayResults(){const t=this.results,e=document.querySelector(".results");e.innerHTML="<table><thead><tr><th>Character</th><th>Difference</th></tr></thead><tbody></tbody></table>";const i=e.querySelector("tbody"),n=this.results.length;for(let e=0;e<n;e++){const n=document.createElement("tr");n.dataset.rank=e+1,n.innerHTML=`<td>${t[e].char}</td><td>${t[e].difference}</td>`,i.appendChild(n)}}displayPreview(t){const e=this.results[t];new ImageData(e.diffImage,this.canvasSize,this.canvasSize);this.resetContext(this.previewContext),this.previewContext.fillStyle="rgba(255, 0, 0, 0.5)",this.renderString(e.char,this.font1,this.previewContext,!1),this.previewContext.fillStyle="rgba(0, 0, 255, 0.25) ",this.renderString(e.char,this.font2,this.previewContext,!1)}resultsRowClick(t){const e=t.target.closest("tr");e&&e.dataset.rank&&this.displayPreview(e.dataset.rank-1)}}new FontCompare(font1,font2);
//# sourceMappingURL=index-min.js.map